{('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'in_label'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'pwm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'in_label'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'temp_input'), ('SENSOR_TEMPLATE', 'pwm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'in_label'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'temp_input'), ('SENSOR_TEMPLATE', 'temp_label'), ('SENSOR_TEMPLATE', 'pwm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'in_label'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'temp_input'), ('SENSOR_TEMPLATE', 'temp_max_hyst'), ('SENSOR_TEMPLATE', 'temp_label'), ('SENSOR_TEMPLATE', 'pwm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'in_label'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'temp_input'), ('SENSOR_TEMPLATE', 'temp_max_hyst'), ('SENSOR_TEMPLATE', 'temp_label'), ('SENSOR_TEMPLATE', 'pwm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'in_label'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'temp_type'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'fan_alarm')}
{('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_alarm')}
{('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_alarm')}
{('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_input'), ('SENSOR_TEMPLATE', 'fan_alarm')}
{('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'pwm_mode'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'pwm_target_temp'), ('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'pwm_mode'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'pwm_target_temp'), ('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'pwm_mode'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'pwm_temp_sel'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'pwm_target_temp'), ('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'pwm_weight_temp_sel'), ('SENSOR_TEMPLATE', 'pwm_mode'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'pwm_temp_sel'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'pwm_target_temp'), ('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'pwm_weight_temp_sel'), ('SENSOR_TEMPLATE', 'pwm_mode'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'pwm_temp_sel'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'temp_alarm'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'pwm_target_temp'), ('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'temp_beep'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'pwm_weight_temp_sel'), ('SENSOR_TEMPLATE', 'pwm_mode'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'pwm_temp_sel'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'temp_alarm'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'pwm_target_temp'), ('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'temp_beep'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'temp_label'), ('SENSOR_TEMPLATE', 'pwm_weight_temp_sel'), ('SENSOR_TEMPLATE', 'pwm_mode'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'pwm_temp_sel'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'temp_alarm'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'pwm_target_temp'), ('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'temp_beep'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'temp_offset'), ('SENSOR_TEMPLATE', 'temp_label'), ('SENSOR_TEMPLATE', 'pwm_weight_temp_sel'), ('SENSOR_TEMPLATE', 'pwm_mode'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'pwm_temp_sel'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'temp_alarm'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
{('SENSOR_TEMPLATE', 'pwm_target_temp'), ('SENSOR_TEMPLATE', 'in_beep'), ('SENSOR_TEMPLATE', 'fan_target'), ('SENSOR_TEMPLATE', 'in_alarm'), ('SENSOR_TEMPLATE', 'temp_beep'), ('SENSOR_TEMPLATE', 'fan_alarm'), ('SENSOR_TEMPLATE', 'pwm_enable'), ('SENSOR_TEMPLATE', 'temp_offset'), ('SENSOR_TEMPLATE', 'temp_label'), ('SENSOR_TEMPLATE', 'pwm_weight_temp_sel'), ('SENSOR_TEMPLATE', 'pwm_mode'), ('SENSOR_TEMPLATE', 'fan_pulses'), ('SENSOR_TEMPLATE', 'pwm_temp_sel'), ('SENSOR_TEMPLATE', 'fan_div'), ('SENSOR_TEMPLATE', 'fan_beep'), ('SENSOR_TEMPLATE', 'temp_type'), ('SENSOR_TEMPLATE', 'temp_alarm'), ('SENSOR_TEMPLATE', 'fan_tolerance'), ('SENSOR_TEMPLATE', 'fan_min'), ('SENSOR_TEMPLATE', 'fan_input')}
